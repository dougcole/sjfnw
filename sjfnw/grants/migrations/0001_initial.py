# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import datetime
import sjfnw.grants.models
from django.utils.timezone import utc
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fund', '0002_auto_20150906_1554'),
    ]

    operations = [
        migrations.CreateModel(
            name='DraftGrantApplication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, blank=True)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, blank=True)),
                ('modified_by', models.CharField(max_length=100, blank=True)),
                ('contents', models.TextField(default=b'{}')),
                ('demographics', models.FileField(max_length=255, upload_to=b'/')),
                ('funding_sources', models.FileField(max_length=255, upload_to=b'/')),
                ('budget1', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Annual statement')),
                ('budget2', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Annual operating budget')),
                ('budget3', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Balance sheet')),
                ('project_budget_file', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Project budget')),
                ('fiscal_letter', models.FileField(max_length=255, upload_to=b'/')),
                ('extended_deadline', models.DateTimeField(help_text=b'Allows this draft to be edited/submitted past the grant cycle close.', null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GivingProjectGrant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(max_digits=8, decimal_places=2)),
                ('check_number', models.PositiveIntegerField(null=True, blank=True)),
                ('check_mailed', models.DateField(null=True, blank=True)),
                ('second_amount', models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)),
                ('second_check_number', models.PositiveIntegerField(null=True, blank=True)),
                ('second_check_mailed', models.DateField(null=True, blank=True)),
                ('agreement_mailed', models.DateField(null=True, blank=True)),
                ('agreement_returned', models.DateField(null=True, blank=True)),
                ('approved', models.DateField(null=True, verbose_name=b'Date approved by the ED', blank=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GrantApplication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('submission_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'Submitted', blank=True)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=2, choices=[(b'ID', b'ID'), (b'MT', b'MT'), (b'OR', b'OR'), (b'WA', b'WA'), (b'WY', b'WY'), (b'AL', b'AL'), (b'AK', b'AK'), (b'AZ', b'AZ'), (b'AR', b'AR'), (b'CA', b'CA'), (b'CO', b'CO'), (b'CT', b'CT'), (b'DE', b'DE'), (b'FL', b'FL'), (b'GA', b'GA'), (b'HI', b'HI'), (b'IL', b'IL'), (b'IN', b'IN'), (b'IA', b'IA'), (b'KS', b'KS'), (b'KY', b'KY'), (b'LA', b'LA'), (b'ME', b'ME'), (b'MD', b'MD'), (b'MA', b'MA'), (b'MI', b'MI'), (b'MN', b'MN'), (b'MS', b'MS'), (b'MO', b'MO'), (b'NE', b'NE'), (b'NV', b'NV'), (b'NH', b'NH'), (b'NJ', b'NJ'), (b'NM', b'NM'), (b'NY', b'NY'), (b'NC', b'NC'), (b'ND', b'ND'), (b'OH', b'OH'), (b'OK', b'OK'), (b'PA', b'PA'), (b'RI', b'RI'), (b'SC', b'SC'), (b'SD', b'SD'), (b'TN', b'TN'), (b'TX', b'TX'), (b'UT', b'UT'), (b'VT', b'VT'), (b'VA', b'VA'), (b'WV', b'WV'), (b'WI', b'WI')])),
                ('zip', models.CharField(max_length=50)),
                ('telephone_number', models.CharField(max_length=20)),
                ('fax_number', models.CharField(blank=True, max_length=20, verbose_name=b'Fax number (optional)', error_messages={b'invalid': 'Enter a 10-digit fax number (including area code).'})),
                ('email_address', models.EmailField(max_length=100)),
                ('website', models.CharField(max_length=50, verbose_name=b'Website (optional)', blank=True)),
                ('status', models.CharField(max_length=50, choices=[(b'Tribal government', b'Federally recognized American Indian tribal government'), (b'501c3', b'501(c)3 organization as recognized by the IRS'), (b'501c4', b'501(c)4 organization as recognized by the IRS'), (b'Sponsored', b'Sponsored by a 501(c)3, 501(c)4, or federally recognized tribal government')])),
                ('ein', models.CharField(max_length=50, verbose_name=b'Organization or Fiscal Sponsor EIN')),
                ('founded', models.PositiveIntegerField(verbose_name=b'Year founded')),
                ('mission', models.TextField(verbose_name=b'Mission statement', validators=[sjfnw.grants.models.WordLimitValidator(150)])),
                ('previous_grants', models.CharField(max_length=255, verbose_name=b'Previous SJF grants awarded (amounts and year)', blank=True)),
                ('start_year', models.CharField(max_length=250, verbose_name=b'Start date of fiscal year')),
                ('budget_last', models.PositiveIntegerField(verbose_name=b'Org. budget last fiscal year')),
                ('budget_current', models.PositiveIntegerField(verbose_name=b'Org. budget this fiscal year')),
                ('grant_request', models.TextField(verbose_name=b'Briefly summarize the grant request', validators=[sjfnw.grants.models.WordLimitValidator(100)])),
                ('contact_person', models.CharField(help_text=b'Contact person for this grant application', max_length=250, verbose_name=b'Name')),
                ('contact_person_title', models.CharField(max_length=100, verbose_name=b'Title')),
                ('grant_period', models.CharField(max_length=250, verbose_name=b'Grant period (if different than fiscal year)', blank=True)),
                ('amount_requested', models.PositiveIntegerField()),
                ('support_type', models.CharField(max_length=50, choices=[(b'General support', b'General support'), (b'Project support', b'Project support')])),
                ('project_title', models.CharField(max_length=250, verbose_name=b'Project title (if applicable)', blank=True)),
                ('project_budget', models.PositiveIntegerField(null=True, verbose_name=b'Project budget (if applicable)', blank=True)),
                ('fiscal_org', models.CharField(max_length=255, verbose_name=b'Fiscal org. name', blank=True)),
                ('fiscal_person', models.CharField(max_length=255, verbose_name=b'Contact person', blank=True)),
                ('fiscal_telephone', models.CharField(max_length=25, verbose_name=b'Telephone', blank=True)),
                ('fiscal_email', models.CharField(max_length=70, verbose_name=b'Email address', blank=True)),
                ('fiscal_address', models.CharField(max_length=255, verbose_name=b'Address', blank=True)),
                ('fiscal_city', models.CharField(max_length=50, verbose_name=b'City', blank=True)),
                ('fiscal_state', models.CharField(blank=True, max_length=2, verbose_name=b'State', choices=[(b'ID', b'ID'), (b'MT', b'MT'), (b'OR', b'OR'), (b'WA', b'WA'), (b'WY', b'WY'), (b'AL', b'AL'), (b'AK', b'AK'), (b'AZ', b'AZ'), (b'AR', b'AR'), (b'CA', b'CA'), (b'CO', b'CO'), (b'CT', b'CT'), (b'DE', b'DE'), (b'FL', b'FL'), (b'GA', b'GA'), (b'HI', b'HI'), (b'IL', b'IL'), (b'IN', b'IN'), (b'IA', b'IA'), (b'KS', b'KS'), (b'KY', b'KY'), (b'LA', b'LA'), (b'ME', b'ME'), (b'MD', b'MD'), (b'MA', b'MA'), (b'MI', b'MI'), (b'MN', b'MN'), (b'MS', b'MS'), (b'MO', b'MO'), (b'NE', b'NE'), (b'NV', b'NV'), (b'NH', b'NH'), (b'NJ', b'NJ'), (b'NM', b'NM'), (b'NY', b'NY'), (b'NC', b'NC'), (b'ND', b'ND'), (b'OH', b'OH'), (b'OK', b'OK'), (b'PA', b'PA'), (b'RI', b'RI'), (b'SC', b'SC'), (b'SD', b'SD'), (b'TN', b'TN'), (b'TX', b'TX'), (b'UT', b'UT'), (b'VT', b'VT'), (b'VA', b'VA'), (b'WV', b'WV'), (b'WI', b'WI')])),
                ('fiscal_zip', models.CharField(max_length=50, verbose_name=b'ZIP', blank=True)),
                ('narrative1', models.TextField(verbose_name=b"Describe your organization's mission, history and major accomplishments.", validators=[sjfnw.grants.models.WordLimitValidator(300)])),
                ('narrative2', models.TextField(help_text=b"Your organization's leadership body is the group of people who together make strategic decisions about the organization's direction, provide oversight and guidance, and are ultimately responsible for the organization's mission and ability to carry out its mission. In most cases, this will be a Board of Directors, but it might also be a steering committee, collective, or other leadership structure.", verbose_name=b'Social Justice Fund prioritizes groups that are led by the people most impacted by the issues the group is working on, and continually build leadership from within their own communities.<ul><li>Who are the communities most directly impacted by the issues your organization addresses?</li><li>How are those communities involved in the leadership of your organization, and how does your organization remain accountable to those communities?</li><li>What is your organization\'s <span class="has-more-info" id="nar-2">leadership body?</span></li></ul>', validators=[sjfnw.grants.models.WordLimitValidator(150)])),
                ('narrative3', models.TextField(verbose_name=b'Social Justice Fund prioritizes groups that understand and address the underlying, or root causes of the issues, and that bring people together to build collective power.<ul><li>What problems, needs or issues does your work address?</li><li>What are the root causes of these issues?</li><li>How does your organization build collective power?</li><li>How will your work change the root causes and underlying power dynamics of the identified problems, needs or issues?</li></ul>', validators=[sjfnw.grants.models.WordLimitValidator(450)])),
                ('narrative4', models.TextField(help_text=b'<ul><li>A goal is what your organization wants to achieve or accomplish. You may have both internal goals (how this work will impact your organization) and external goals (how this work will impact your broader community).</li><li>An objective is generally narrower and more specific than a goal, like a stepping stone along the way.</li><li>A strategy is a road map for achieving your goal. How will you get there? A strategy will generally encompass multiple activities or tactics.</li></ul>', verbose_name=b'Please describe your workplan, covering at least the next 12 months. (You will list the activities and objectives in the timeline form below,)<ul><li>What are your overall <span class="has-more-info" id="nar-4">goals, objectives and strategies</span> for the coming year?</li><li>How will you assess whether you have met your goals and objectives?</li></ul>', validators=[sjfnw.grants.models.WordLimitValidator(300)])),
                ('narrative5', models.TextField(verbose_name=b"Social Justice Fund prioritizes groups that see themselves as part of a larger movement for social change, and work towards strengthening that movement.<ul><li>Describe at least two coalitions, collaborations, partnerships or networks that you participate in as an approach to social change.</li><li>What are the purposes and impacts of these collaborations?</li><li>What is your organization's role in these collaborations?</li><li>If your collaborations cross issue or constituency lines, how will this will help build a broad, unified, and effective progressive movement?</li></ul>", validators=[sjfnw.grants.models.WordLimitValidator(300)])),
                ('narrative6', models.TextField(help_text=b"Your organization's leadership body is the group of people who together make strategic decisions about the organization's direction, provide oversight and guidance, and are ultimately responsible for the organization's mission and ability to carry out its mission. In most cases, this will be a Board of Directors, but it might also be a steering committee, collective, or other leadership structure.", verbose_name=b'Social Justice Fund prioritizes groups working on racial justice, especially those making connections between racism, economic injustice, homophobia, and other forms of oppression. Tell us how your organization is working toward racial justice and how you are drawing connections to economic injustice, homophobia, and other forms of oppression. <i>While we believe people of color must lead the struggle for racial justice, we also realize that the demographics of our region make the work of white anti-racist allies critical to achieving racial justice.</i>If your organization\'s <span class="has-more-info" id="nar-6">leadership body</span> is majority white, also describe how you work as an ally to communities of color. Be as specific as possible, and list at least one organization led by people of color that we can contact as a reference for your racial justice work. Include their name, organization, phone number and email.', validators=[sjfnw.grants.models.WordLimitValidator(450)])),
                ('cycle_question', models.TextField(blank=True, validators=[sjfnw.grants.models.WordLimitValidator(750)])),
                ('timeline', models.TextField(verbose_name=b"Please fill in this timeline to describe your activities over the next five quarters. This will not exactly match up with the time period funded by this grant. We are asking for this information to give us an idea of what your work looks like: what you are doing and how those activities intersect and build on each other and move you towards your goals. Because our grants are usually general operating funds, we want to get a sense of what your organizing work looks like over time. Note: We understand that this timeline is based only on what you know right now and that circumstances change. If you receive this grant, you will submit a brief report one year later, which will ask you what progress you've made on the goals outlined in this application or, if you changed direction, why.")),
                ('collab_ref1_name', models.CharField(help_text=b"Provide names and contact information for two people who are familiar with your organization's role in these collaborations so we can contact them for more information.", max_length=150, verbose_name=b'Name')),
                ('collab_ref1_org', models.CharField(max_length=150, verbose_name=b'Organization')),
                ('collab_ref1_phone', models.CharField(max_length=20, verbose_name=b'Phone number', blank=True)),
                ('collab_ref1_email', models.EmailField(max_length=100, verbose_name=b'Email', blank=True)),
                ('collab_ref2_name', models.CharField(max_length=150, verbose_name=b'Name')),
                ('collab_ref2_org', models.CharField(max_length=150, verbose_name=b'Organization')),
                ('collab_ref2_phone', models.CharField(max_length=20, verbose_name=b'Phone number', blank=True)),
                ('collab_ref2_email', models.EmailField(max_length=100, verbose_name=b'Email', blank=True)),
                ('racial_justice_ref1_name', models.CharField(max_length=150, verbose_name=b'Name', blank=True)),
                ('racial_justice_ref1_org', models.CharField(max_length=150, verbose_name=b'Organization', blank=True)),
                ('racial_justice_ref1_phone', models.CharField(max_length=20, verbose_name=b'Phone number', blank=True)),
                ('racial_justice_ref1_email', models.EmailField(max_length=100, verbose_name=b'Email', blank=True)),
                ('racial_justice_ref2_name', models.CharField(max_length=150, verbose_name=b'Name', blank=True)),
                ('racial_justice_ref2_org', models.CharField(max_length=150, verbose_name=b'Organization', blank=True)),
                ('racial_justice_ref2_phone', models.CharField(max_length=20, verbose_name=b'Phone number', blank=True)),
                ('racial_justice_ref2_email', models.EmailField(max_length=100, verbose_name=b'Email', blank=True)),
                ('budget', models.FileField(blank=True, max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_file_extension])),
                ('demographics', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Diversity chart', validators=[sjfnw.grants.models.validate_file_extension])),
                ('funding_sources', models.FileField(max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_file_extension])),
                ('budget1', models.FileField(help_text=b'This is the statement of actual income and expenses for the most recent completed fiscal year. Upload in your own format, but do not send your annual report, tax returns, or entire audited financial statement.', upload_to=b'/', max_length=255, verbose_name=b'Annual statement', validators=[sjfnw.grants.models.validate_file_extension])),
                ('budget2', models.FileField(help_text=b"This is a projection of all known and estimated income and expenses for the current fiscal year. You may upload in your own format or use our budget form. NOTE: If your fiscal year will end within three months of this grant application deadline, please also attach your operating budget for the next fiscal year, so that we can get a more accurate sense of your organization's situation.", upload_to=b'/', max_length=255, verbose_name=b'Annual operating budget', validators=[sjfnw.grants.models.validate_file_extension])),
                ('budget3', models.FileField(help_text=b'This is a snapshot of your financial status at the moment: a brief, current statement of your assets, liabilities, and cash on hand. Upload in your own format.', upload_to=b'/', max_length=255, verbose_name=b'Balance sheet', validators=[sjfnw.grants.models.validate_file_extension])),
                ('project_budget_file', models.FileField(validators=[sjfnw.grants.models.validate_file_extension], upload_to=b'/', max_length=255, blank=True, help_text=b'This is required only if you are requesting project-specific funds. Otherwise, it is optional. You may upload in your own format or use our budget form.', verbose_name=b'Project budget (if applicable)')),
                ('fiscal_letter', models.FileField(validators=[sjfnw.grants.models.validate_file_extension], upload_to=b'/', max_length=255, blank=True, help_text=b"Letter from the sponsor stating that it agrees to act as your fiscal sponsor and supports Social Justice Fund's mission.", verbose_name=b'Fiscal sponsor letter')),
                ('pre_screening_status', models.IntegerField(default=10, choices=[(10, b'Received'), (20, b'Incomplete'), (30, b'Complete'), (40, b'Pre-screened out'), (45, b'Screened out by sub-committee'), (50, b'Pre-screened in')])),
                ('scoring_bonus_poc', models.BooleanField(default=False, verbose_name=b'Scoring bonus for POC-led')),
                ('scoring_bonus_geo', models.BooleanField(default=False, verbose_name=b'Scoring bonus for geographic diversity')),
                ('site_visit_report', models.URLField(help_text=b'Link to the google doc containing the site visit report. This will be visible to all project members, but not the organization.', blank=True)),
            ],
            options={
                'ordering': ['organization', 'submission_time'],
            },
        ),
        migrations.CreateModel(
            name='GrantApplicationLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('contacted', models.CharField(help_text=b'Person from the organization that you talked to, if applicable.', max_length=255, blank=True)),
                ('notes', models.TextField()),
                ('application', models.ForeignKey(blank=True, to='grants.GrantApplication', help_text=b'Optional - if this log entry relates to a specific grant application, select it from the list', null=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GrantCycle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('open', models.DateTimeField()),
                ('close', models.DateTimeField()),
                ('extra_question', models.TextField(blank=True)),
                ('info_page', models.URLField()),
                ('email_signature', models.TextField(blank=True)),
                ('conflicts', models.TextField(help_text=b'Track any conflicts of interest (automatic & personally declared) that occurred  during this cycle.', blank=True)),
                ('private', models.BooleanField(default=False, verbose_name=b'Private (will not be displayed to orgs, but can be accessed by anyone who has the direct link)')),
            ],
            options={
                'ordering': ['-close', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255, error_messages={b'unique': b'An organization with this name is already in the system. To add a separate org with the same name, add/alter the name to differentiate the two.'})),
                ('email', models.EmailField(unique=True, max_length=100, verbose_name=b'Login', blank=True)),
                ('staff_contact_person', models.CharField(max_length=250, verbose_name=b'Staff-entered contact person', blank=True)),
                ('staff_contact_person_title', models.CharField(max_length=100, verbose_name=b'Title', blank=True)),
                ('staff_contact_email', models.EmailField(max_length=255, verbose_name=b'Email address', blank=True)),
                ('staff_contact_phone', models.CharField(max_length=20, verbose_name=b'Phone number', blank=True)),
                ('address', models.CharField(max_length=100, blank=True)),
                ('city', models.CharField(max_length=50, blank=True)),
                ('state', models.CharField(blank=True, max_length=2, choices=[(b'ID', b'ID'), (b'MT', b'MT'), (b'OR', b'OR'), (b'WA', b'WA'), (b'WY', b'WY'), (b'AL', b'AL'), (b'AK', b'AK'), (b'AZ', b'AZ'), (b'AR', b'AR'), (b'CA', b'CA'), (b'CO', b'CO'), (b'CT', b'CT'), (b'DE', b'DE'), (b'FL', b'FL'), (b'GA', b'GA'), (b'HI', b'HI'), (b'IL', b'IL'), (b'IN', b'IN'), (b'IA', b'IA'), (b'KS', b'KS'), (b'KY', b'KY'), (b'LA', b'LA'), (b'ME', b'ME'), (b'MD', b'MD'), (b'MA', b'MA'), (b'MI', b'MI'), (b'MN', b'MN'), (b'MS', b'MS'), (b'MO', b'MO'), (b'NE', b'NE'), (b'NV', b'NV'), (b'NH', b'NH'), (b'NJ', b'NJ'), (b'NM', b'NM'), (b'NY', b'NY'), (b'NC', b'NC'), (b'ND', b'ND'), (b'OH', b'OH'), (b'OK', b'OK'), (b'PA', b'PA'), (b'RI', b'RI'), (b'SC', b'SC'), (b'SD', b'SD'), (b'TN', b'TN'), (b'TX', b'TX'), (b'UT', b'UT'), (b'VT', b'VT'), (b'VA', b'VA'), (b'WV', b'WV'), (b'WI', b'WI')])),
                ('zip', models.CharField(max_length=50, blank=True)),
                ('telephone_number', models.CharField(max_length=20, blank=True)),
                ('fax_number', models.CharField(max_length=20, blank=True)),
                ('email_address', models.EmailField(max_length=100, blank=True)),
                ('website', models.CharField(max_length=50, blank=True)),
                ('contact_person', models.CharField(max_length=250, verbose_name=b'Contact person', blank=True)),
                ('contact_person_title', models.CharField(max_length=100, verbose_name=b'Title', blank=True)),
                ('status', models.CharField(blank=True, max_length=50, choices=[(b'Tribal government', b'Federally recognized American Indian tribal government'), (b'501c3', b'501(c)3 organization as recognized by the IRS'), (b'501c4', b'501(c)4 organization as recognized by the IRS'), (b'Sponsored', b'Sponsored by a 501(c)3, 501(c)4, or federally recognized tribal government')])),
                ('ein', models.CharField(max_length=50, verbose_name=b"Organization's or Fiscal Sponsor Organization's EIN", blank=True)),
                ('founded', models.PositiveIntegerField(null=True, verbose_name=b'Year founded', blank=True)),
                ('mission', models.TextField(blank=True)),
                ('fiscal_org', models.CharField(max_length=255, verbose_name=b'Organization name', blank=True)),
                ('fiscal_person', models.CharField(max_length=255, verbose_name=b'Contact person', blank=True)),
                ('fiscal_telephone', models.CharField(max_length=25, verbose_name=b'Telephone', blank=True)),
                ('fiscal_email', models.CharField(max_length=100, verbose_name=b'Email address', blank=True)),
                ('fiscal_address', models.CharField(max_length=255, verbose_name=b'Address', blank=True)),
                ('fiscal_city', models.CharField(max_length=50, verbose_name=b'City', blank=True)),
                ('fiscal_state', models.CharField(blank=True, max_length=2, verbose_name=b'State', choices=[(b'ID', b'ID'), (b'MT', b'MT'), (b'OR', b'OR'), (b'WA', b'WA'), (b'WY', b'WY'), (b'AL', b'AL'), (b'AK', b'AK'), (b'AZ', b'AZ'), (b'AR', b'AR'), (b'CA', b'CA'), (b'CO', b'CO'), (b'CT', b'CT'), (b'DE', b'DE'), (b'FL', b'FL'), (b'GA', b'GA'), (b'HI', b'HI'), (b'IL', b'IL'), (b'IN', b'IN'), (b'IA', b'IA'), (b'KS', b'KS'), (b'KY', b'KY'), (b'LA', b'LA'), (b'ME', b'ME'), (b'MD', b'MD'), (b'MA', b'MA'), (b'MI', b'MI'), (b'MN', b'MN'), (b'MS', b'MS'), (b'MO', b'MO'), (b'NE', b'NE'), (b'NV', b'NV'), (b'NH', b'NH'), (b'NJ', b'NJ'), (b'NM', b'NM'), (b'NY', b'NY'), (b'NC', b'NC'), (b'ND', b'ND'), (b'OH', b'OH'), (b'OK', b'OK'), (b'PA', b'PA'), (b'RI', b'RI'), (b'SC', b'SC'), (b'SD', b'SD'), (b'TN', b'TN'), (b'TX', b'TX'), (b'UT', b'UT'), (b'VT', b'VT'), (b'VA', b'VA'), (b'WV', b'WV'), (b'WI', b'WI')])),
                ('fiscal_zip', models.CharField(max_length=50, verbose_name=b'ZIP', blank=True)),
                ('fiscal_letter', models.FileField(max_length=255, null=True, upload_to=b'/', blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectApp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('screening_status', models.IntegerField(blank=True, null=True, choices=[(60, b'Screened out'), (70, b'Site visit awarded'), (80, b'Grant denied'), (90, b'Grant issued'), (100, b'Grant paid'), (110, b'Year-end report overdue'), (120, b'Year-end report received'), (130, b'Closed')])),
                ('application', models.ForeignKey(to='grants.GrantApplication')),
                ('giving_project', models.ForeignKey(to='fund.GivingProject')),
            ],
        ),
        migrations.CreateModel(
            name='SponsoredProgramGrant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('entered', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.PositiveIntegerField()),
                ('check_number', models.PositiveIntegerField(null=True, blank=True)),
                ('check_mailed', models.DateField(null=True, blank=True)),
                ('approved', models.DateField(null=True, verbose_name=b'Date approved by the ED', blank=True)),
                ('description', models.TextField(blank=True)),
                ('organization', models.ForeignKey(to='grants.Organization')),
            ],
            options={
                'ordering': ['organization'],
            },
        ),
        migrations.CreateModel(
            name='YearEndReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('submitted', models.DateTimeField(default=datetime.datetime(2015, 9, 6, 22, 54, 32, 581334, tzinfo=utc))),
                ('contact_person', models.TextField()),
                ('email', models.EmailField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('website', models.CharField(max_length=255)),
                ('summarize_last_year', models.TextField(verbose_name=b"1. Thinking about the Giving Project volunteers who decided to fund you last year, including those you met on your site visit, what would you like to tell them about what you've done over the last year?")),
                ('goal_progress', models.TextField(verbose_name=b'2. Please refer back to your application from last year. Looking at the goals you outlined in your application, what progress have you made on each? If you were unable to achieve those goals or changed your direction, please explain why.')),
                ('quantitative_measures', models.TextField(verbose_name=b'3. Do you evaluate your work by any quantitative measures (e.g., number of voters registered, members trained, leaders developed, etc.)? If so, provide that information:', blank=True)),
                ('evaluation', models.TextField(verbose_name=b'4. What other type of evaluations do you use internally? Please share any outcomes that are relevant to the work funded by this grant.')),
                ('achieved', models.TextField(verbose_name=b'5. What specific victories, benchmarks, and/or policy changes (local, state, regional, or national) have you achieved over the past year?')),
                ('collaboration', models.TextField(verbose_name=b'6. What other organizations did you work with to achieve those accomplishments?')),
                ('new_funding', models.TextField(verbose_name=b'7. Did your grant from Social Justice Fund help you access any new sources of funding? If so, please explain.', blank=True)),
                ('major_changes', models.TextField(verbose_name=b'8. Describe any major staff or board changes or other major organizational changes in the past year.', blank=True)),
                ('total_size', models.PositiveIntegerField(verbose_name=b'9. What is the total size of your base? That is, how many people, including paid staff, identify as part of your organization?')),
                ('donations_count', models.PositiveIntegerField(verbose_name=b'10. How many individuals gave a financial contribution of any size to your organization in the last year?')),
                ('donations_count_prev', models.PositiveIntegerField(null=True, verbose_name=b'How many individuals made a financial contribution the previous year?')),
                ('stay_informed', models.TextField(default=b'{}', verbose_name=b'11. What is the best way for us to stay informed about your work? (Enter any/all that apply)')),
                ('other_comments', models.TextField(verbose_name=b'12. Other comments or information? Do you have any suggestions for how SJF can improve its grantmaking programs?', blank=True)),
                ('photo1', models.FileField(help_text=b"Please provide two or more photos that show your organization's members, activities, etc. These pictures help us tell the story of our grantees and of Social Justice Fund to the broader public.", max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_photo_file_extension])),
                ('photo2', models.FileField(max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_photo_file_extension])),
                ('photo3', models.FileField(blank=True, help_text=b'(optional)', max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_photo_file_extension])),
                ('photo4', models.FileField(blank=True, help_text=b'(optional)', max_length=255, upload_to=b'/', validators=[sjfnw.grants.models.validate_photo_file_extension])),
                ('photo_release', models.FileField(upload_to=b'/', max_length=255, verbose_name=b'Please provide photo releases signed by any people who appear in these photos.')),
                ('visible', models.BooleanField(default=False, help_text=b'Check this to make the YER visible to members of the GP that made the grant. (When unchecked, YER is only visible to staff and the org that submitted it.)')),
                ('award', models.ForeignKey(to='grants.GivingProjectGrant')),
            ],
        ),
        migrations.CreateModel(
            name='YERDraft',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('modified', models.DateTimeField(default=datetime.datetime(2015, 9, 6, 22, 54, 32, 583043, tzinfo=utc))),
                ('contents', models.TextField(default=b'{}')),
                ('photo1', models.FileField(max_length=255, upload_to=b'/', blank=True)),
                ('photo2', models.FileField(max_length=255, upload_to=b'/', blank=True)),
                ('photo3', models.FileField(max_length=255, upload_to=b'/', blank=True)),
                ('photo4', models.FileField(max_length=255, upload_to=b'/', blank=True)),
                ('photo_release', models.FileField(max_length=255, upload_to=b'/')),
                ('award', models.ForeignKey(to='grants.GivingProjectGrant')),
            ],
        ),
        migrations.AddField(
            model_name='grantapplicationlog',
            name='organization',
            field=models.ForeignKey(to='grants.Organization'),
        ),
        migrations.AddField(
            model_name='grantapplicationlog',
            name='staff',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grantapplication',
            name='giving_projects',
            field=models.ManyToManyField(to='fund.GivingProject', through='grants.ProjectApp', blank=True),
        ),
        migrations.AddField(
            model_name='grantapplication',
            name='grant_cycle',
            field=models.ForeignKey(to='grants.GrantCycle'),
        ),
        migrations.AddField(
            model_name='grantapplication',
            name='organization',
            field=models.ForeignKey(to='grants.Organization'),
        ),
        migrations.AddField(
            model_name='givingprojectgrant',
            name='projectapp',
            field=models.OneToOneField(to='grants.ProjectApp'),
        ),
        migrations.AddField(
            model_name='draftgrantapplication',
            name='grant_cycle',
            field=models.ForeignKey(to='grants.GrantCycle'),
        ),
        migrations.AddField(
            model_name='draftgrantapplication',
            name='organization',
            field=models.ForeignKey(to='grants.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='projectapp',
            unique_together=set([('giving_project', 'application')]),
        ),
        migrations.AlterUniqueTogether(
            name='grantapplication',
            unique_together=set([('organization', 'grant_cycle')]),
        ),
        migrations.AlterUniqueTogether(
            name='draftgrantapplication',
            unique_together=set([('organization', 'grant_cycle')]),
        ),
    ]
